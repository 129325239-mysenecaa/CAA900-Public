apiVersion: v1
kind: Pod
metadata:
  name: mysql
  namespace: db
  labels:
    appdb: mysql
spec:  
  containers:
  - name: db
    image: docker.io/library/mysql:latest
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-credentials
          key: password
    ports:
    - containerPort: 3306
    volumeMounts:
      - name: mysql-initdb
        mountPath: /docker-entrypoint-initdb.d
      - mountPath: "/var/lib/mysql"
        subPath: "mysql"
        name: mysql-data
    volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data-disk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  mysql.sql: |
    CREATE DATABASE IF NOT EXISTS employees;
    USE employees;

    CREATE TABLE IF NOT EXISTS employee(
    emp_id VARCHAR(20),
    first_name VARCHAR(20),
    last_name VARCHAR(20),
    primary_skill VARCHAR(20),
    location VARCHAR(20));

    INSERT INTO employee VALUES ('1','Amanda','Williams','Smile','local');
    INSERT INTO employee VALUES ('2','Alan','Williams','Empathy','alien');
    SELECT * FROM employee;
--
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
